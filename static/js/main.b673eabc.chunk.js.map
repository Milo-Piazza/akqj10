{"version":3,"sources":["../public/cards sync /^/.//.*$","../public/cards/2C.png","../public/cards/2D.png","../public/cards/2H.png","../public/cards/2S.png","../public/cards/3C.png","../public/cards/3D.png","../public/cards/3H.png","../public/cards/3S.png","../public/cards/4C.png","../public/cards/4D.png","../public/cards/4H.png","../public/cards/4S.png","../public/cards/5C.png","../public/cards/5D.png","../public/cards/5H.png","../public/cards/5S.png","../public/cards/6C.png","../public/cards/6D.png","../public/cards/6H.png","../public/cards/6S.png","../public/cards/7C.png","../public/cards/7D.png","../public/cards/7H.png","../public/cards/7S.png","../public/cards/8C.png","../public/cards/8D.png","../public/cards/8H.png","../public/cards/8S.png","../public/cards/9C.png","../public/cards/9D.png","../public/cards/9H.png","../public/cards/9S.png","../public/cards/AC.png","../public/cards/AD.png","../public/cards/AH.png","../public/cards/AS.png","../public/cards/JC.png","../public/cards/JD.png","../public/cards/JH.png","../public/cards/JS.png","../public/cards/KC.png","../public/cards/KD.png","../public/cards/KH.png","../public/cards/KS.png","../public/cards/QC.png","../public/cards/QD.png","../public/cards/QH.png","../public/cards/QS.png","../public/cards/TC.png","../public/cards/TD.png","../public/cards/TH.png","../public/cards/TS.png","../public/cards/blue_back.png","../public/cards/gray_back.png","../public/cards/green_back.png","../public/cards/purple_back.png","../public/cards/red_back.png","../public/cards/yellow_back.png","model/Paytable.js","components/PaytableView.js","model/Deck.js","utils/math.js","model/HoldCalculator.js","components/HoldAdvisorModal.js","components/PokerGame.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Paytable","this","hands","pays","bet","name","condition","isRoyalFlush","bind","isStraightFlush","isFourOfAKind","isFullHouse","isFlush","isStraight","isThreeOfAKind","isTwoPair","isJacksOrBetter","hand","handType","pures","constructor","removeWilds","card","rankComparison","rank","wildCount","length","counts","countRanks","suit","sort","rankComparator","maxRank","minRank","secondRank","pairs","entries","count","filter","isWild","card1","card2","PaytableView","props","paytable","className","item","key","toString","Component","Deck","cardCount","cardIdsDrawn","Set","rankCount","ranks","suitCount","suits","cardId","Math","floor","random","has","cardFromId","add","clear","choose","cache","_choose","n","k","res","HoldCalculator","deck","outCounters","countOutsForJacksOrBetter","countOutsForTwoPair","countOutsForThreeOfAKind","countOutsForStraight","countOutsForFlush","countOutsForFullHouse","countOutsForFourOfAKind","countOutsForStraightFlush","countOutsForRoyalFlush","cards","currentReturn","maxReturn","bestHold","currentHold","i","j","Boolean","getExpectedReturnForHold","slice","hold","return","getPays","numCardsHeld","x","evaluateHand","expectedReturn","handName","outs","pay","heldCards","getHeldCards","deckRanks","countRanksInDeck","draws","getDiscardedCards","ranksHeld","highPair","ranksToDraw","assign","hits","countDistinctRankDraws","_count","i1","i2","rank1","rank2","hits1","hits2","heldRanks","currentOuts","countRankIndicesInDeck","straightRanks","highRank","delete","discardedCards","countSuitsInDeck","cardsAreSuited","over","under","toDrawOver","toDrawUnder","flag","cardsDrawn","HoldAdvisorModal","holdCalculator","message","the_return","getHTMLForCard","toFixed","isHeld","the_style","style","suitToCode","show","holdInfo","getOptimalHold","currReturn","optimalHold","optimalReturn","_","isEqual","getHoldMessage","cardImages","require","PokerGame","handleHoldChange","state","gameState","setState","held","index","prevCards","chips","preloadCardImages","handleDeal","handleDraw","handleBetMax","handleBetOne","updateHand","getCardImageCode","url","Image","src","reset","new_cards","drawCard","push","old_cards","new_card","newCards","callback","newHand","draggable","onClick","getCardImage","App","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"4MAAA,IAAIA,EAAM,CACT,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,WAAY,GACZ,kBAAmB,GACnB,kBAAmB,GACnB,mBAAoB,GACpB,oBAAqB,GACrB,iBAAkB,GAClB,oBAAqB,IAItB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,I,gBC/EpBU,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,gBCA3CD,EAAOC,QAAU,IAA0B,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","file":"static/js/main.b673eabc.chunk.js","sourcesContent":["var map = {\n\t\"./2C.png\": 24,\n\t\"./2D.png\": 25,\n\t\"./2H.png\": 26,\n\t\"./2S.png\": 27,\n\t\"./3C.png\": 28,\n\t\"./3D.png\": 29,\n\t\"./3H.png\": 30,\n\t\"./3S.png\": 31,\n\t\"./4C.png\": 32,\n\t\"./4D.png\": 33,\n\t\"./4H.png\": 34,\n\t\"./4S.png\": 35,\n\t\"./5C.png\": 36,\n\t\"./5D.png\": 37,\n\t\"./5H.png\": 38,\n\t\"./5S.png\": 39,\n\t\"./6C.png\": 40,\n\t\"./6D.png\": 41,\n\t\"./6H.png\": 42,\n\t\"./6S.png\": 43,\n\t\"./7C.png\": 44,\n\t\"./7D.png\": 45,\n\t\"./7H.png\": 46,\n\t\"./7S.png\": 47,\n\t\"./8C.png\": 48,\n\t\"./8D.png\": 49,\n\t\"./8H.png\": 50,\n\t\"./8S.png\": 51,\n\t\"./9C.png\": 52,\n\t\"./9D.png\": 53,\n\t\"./9H.png\": 54,\n\t\"./9S.png\": 55,\n\t\"./AC.png\": 56,\n\t\"./AD.png\": 57,\n\t\"./AH.png\": 58,\n\t\"./AS.png\": 59,\n\t\"./JC.png\": 60,\n\t\"./JD.png\": 61,\n\t\"./JH.png\": 62,\n\t\"./JS.png\": 63,\n\t\"./KC.png\": 64,\n\t\"./KD.png\": 65,\n\t\"./KH.png\": 66,\n\t\"./KS.png\": 67,\n\t\"./QC.png\": 68,\n\t\"./QD.png\": 69,\n\t\"./QH.png\": 70,\n\t\"./QS.png\": 71,\n\t\"./TC.png\": 72,\n\t\"./TD.png\": 73,\n\t\"./TH.png\": 74,\n\t\"./TS.png\": 75,\n\t\"./blue_back.png\": 76,\n\t\"./gray_back.png\": 77,\n\t\"./green_back.png\": 78,\n\t\"./purple_back.png\": 79,\n\t\"./red_back.png\": 80,\n\t\"./yellow_back.png\": 81\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 23;","module.exports = __webpack_public_path__ + \"static/media/2C.136dab43.png\";","module.exports = __webpack_public_path__ + \"static/media/2D.1451de5d.png\";","module.exports = __webpack_public_path__ + \"static/media/2H.ebe43495.png\";","module.exports = __webpack_public_path__ + \"static/media/2S.33c964ae.png\";","module.exports = __webpack_public_path__ + \"static/media/3C.6ed5bf64.png\";","module.exports = __webpack_public_path__ + \"static/media/3D.690d5a47.png\";","module.exports = __webpack_public_path__ + \"static/media/3H.7278d51d.png\";","module.exports = __webpack_public_path__ + \"static/media/3S.9638bf9f.png\";","module.exports = __webpack_public_path__ + \"static/media/4C.23c51e0b.png\";","module.exports = __webpack_public_path__ + \"static/media/4D.89eaac32.png\";","module.exports = __webpack_public_path__ + \"static/media/4H.6695f1d5.png\";","module.exports = __webpack_public_path__ + \"static/media/4S.5156259e.png\";","module.exports = __webpack_public_path__ + \"static/media/5C.3ac88edd.png\";","module.exports = __webpack_public_path__ + \"static/media/5D.24fd440c.png\";","module.exports = __webpack_public_path__ + \"static/media/5H.5457f189.png\";","module.exports = __webpack_public_path__ + \"static/media/5S.5ab3d862.png\";","module.exports = __webpack_public_path__ + \"static/media/6C.5c96f40f.png\";","module.exports = __webpack_public_path__ + \"static/media/6D.ff1c6299.png\";","module.exports = __webpack_public_path__ + \"static/media/6H.84564e31.png\";","module.exports = __webpack_public_path__ + \"static/media/6S.c99b0f04.png\";","module.exports = __webpack_public_path__ + \"static/media/7C.4808cc41.png\";","module.exports = __webpack_public_path__ + \"static/media/7D.58d872f0.png\";","module.exports = __webpack_public_path__ + \"static/media/7H.c8475b53.png\";","module.exports = __webpack_public_path__ + \"static/media/7S.82d62864.png\";","module.exports = __webpack_public_path__ + \"static/media/8C.a46a54d9.png\";","module.exports = __webpack_public_path__ + \"static/media/8D.fcafeaf2.png\";","module.exports = __webpack_public_path__ + \"static/media/8H.1e9e59b0.png\";","module.exports = __webpack_public_path__ + \"static/media/8S.497eed1e.png\";","module.exports = __webpack_public_path__ + \"static/media/9C.4f8d0d8f.png\";","module.exports = __webpack_public_path__ + \"static/media/9D.1d495bb1.png\";","module.exports = __webpack_public_path__ + \"static/media/9H.33ab7891.png\";","module.exports = __webpack_public_path__ + \"static/media/9S.50caac18.png\";","module.exports = __webpack_public_path__ + \"static/media/AC.17ca9f77.png\";","module.exports = __webpack_public_path__ + \"static/media/AD.f37d608f.png\";","module.exports = __webpack_public_path__ + \"static/media/AH.a762540d.png\";","module.exports = __webpack_public_path__ + \"static/media/AS.e6a6d2f8.png\";","module.exports = __webpack_public_path__ + \"static/media/JC.1595a3ea.png\";","module.exports = __webpack_public_path__ + \"static/media/JD.d5682eb4.png\";","module.exports = __webpack_public_path__ + \"static/media/JH.fdf4ffc4.png\";","module.exports = __webpack_public_path__ + \"static/media/JS.89d2c97e.png\";","module.exports = __webpack_public_path__ + \"static/media/KC.aa73cfd0.png\";","module.exports = __webpack_public_path__ + \"static/media/KD.6b5b30c0.png\";","module.exports = __webpack_public_path__ + \"static/media/KH.3b48ae82.png\";","module.exports = __webpack_public_path__ + \"static/media/KS.e8d1a4cf.png\";","module.exports = __webpack_public_path__ + \"static/media/QC.d6296277.png\";","module.exports = __webpack_public_path__ + \"static/media/QD.6940967d.png\";","module.exports = __webpack_public_path__ + \"static/media/QH.63afa62b.png\";","module.exports = __webpack_public_path__ + \"static/media/QS.9026849b.png\";","module.exports = __webpack_public_path__ + \"static/media/TC.19635027.png\";","module.exports = __webpack_public_path__ + \"static/media/TD.39ef422e.png\";","module.exports = __webpack_public_path__ + \"static/media/TH.60ab387c.png\";","module.exports = __webpack_public_path__ + \"static/media/TS.b208cd7f.png\";","module.exports = __webpack_public_path__ + \"static/media/blue_back.8a890151.png\";","module.exports = __webpack_public_path__ + \"static/media/gray_back.db53954a.png\";","module.exports = __webpack_public_path__ + \"static/media/green_back.80d296e9.png\";","module.exports = __webpack_public_path__ + \"static/media/purple_back.44961e95.png\";","module.exports = __webpack_public_path__ + \"static/media/red_back.b27beff2.png\";","module.exports = __webpack_public_path__ + \"static/media/yellow_back.28340480.png\";","class Paytable {\n\n    static rankComparison = {\n        \"2\": 0,\n        \"3\": 1,\n        \"4\": 2,\n        \"5\": 3,\n        \"6\": 4,\n        \"7\": 5,\n        \"8\": 6,\n        \"9\": 7,\n        \"T\": 8,\n        \"J\": 9,\n        \"Q\": 10,\n        \"K\": 11,\n        \"A\": 12,\n        \"Joker\": 13\n    }\n\n    constructor() {\n        this.hands = [\n            {\n                pays: (bet) => bet === 5 ? bet * 800 : bet * 250,\n                name: \"Royal Flush\",\n                condition: this.isRoyalFlush.bind(this)\n            },\n            {\n                pays: (bet) => bet * 50,\n                name: \"Straight Flush\",\n                condition: this.isStraightFlush.bind(this)\n            },\n            {\n                pays: (bet) => bet * 25,\n                name: \"Four of a Kind\",\n                condition: this.isFourOfAKind.bind(this)\n            },\n            {\n                pays: (bet) => bet * 9,\n                name: \"Full House\",\n                condition: this.isFullHouse.bind(this)\n            },\n            {\n                pays: (bet) => bet * 6,\n                name: \"Flush\",\n                condition: this.isFlush.bind(this)\n            },\n            {\n                pays: (bet) => bet * 4,\n                name: \"Straight\",\n                condition: this.isStraight.bind(this)\n            },\n            {\n                pays: (bet) => bet * 3,\n                name: \"Three of a Kind\",\n                condition: this.isThreeOfAKind.bind(this)\n            },\n            {\n                pays: (bet) => bet * 2,\n                name: \"Two Pair\",\n                condition: this.isTwoPair.bind(this)\n            },\n            {\n                pays: (bet) => bet * 1,\n                name: \"Jacks or Better\",\n                condition: this.isJacksOrBetter.bind(this)\n            },\n        ]\n    }\n\n    evaluateHand(hand, bet) {\n        for (let handType of this.hands) {\n            if (handType.condition(hand)) {\n                return {\n                    name: handType.name,\n                    pays: handType.pays(bet)\n                };\n            }\n        }\n        return {\n            name: \"Nothing\",\n            pays: 0\n        };\n    }\n\n    isRoyalFlush(hand) {\n        if (!this.isStraightFlush(hand)) {\n            return false;\n        }\n        const pures = this.constructor.removeWilds(hand);\n        for (const card of pures) {\n            //If non-wild card has a rank of less than 10\n            if (this.constructor.rankComparison[card.rank] < 8) {\n                return false;\n            }\n            //We don't worry about duplicates because the hand is already a straight flush,\n            //implying it has no duplicates.\n        }\n        return true;\n    }\n\n    isStraightFlush(hand) {\n        return this.isStraight(hand) && this.isFlush(hand);\n    }\n\n    isFourOfAKind(hand) {\n        const pures = this.constructor.removeWilds(hand);\n        const wildCount = hand.length - pures.length;\n        const counts = this.constructor.countRanks(pures);\n        for (const rank of Object.keys(counts)) {\n            if (counts[rank] + wildCount >= 4) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    isFullHouse(hand) {\n        const pures = this.constructor.removeWilds(hand);\n        const counts = this.constructor.countRanks(pures);\n        //If there are at least 3 wilds or only one rank the hand is a four/five-of-a-kind.\n        return (Object.keys(counts).length === 2);\n    }\n\n    isFlush(hand) {\n        const pures = this.constructor.removeWilds(hand);\n        if (pures.length === 0) {\n            return true;\n        }\n        const suit = pures[0].suit;\n        for (const card of pures) {\n            if (card.suit !== suit) {\n                return false\n            }\n        }\n        return true;\n    }\n\n    isStraight(hand) {\n        const pures = this.constructor.removeWilds(hand);\n        if (pures.length <= 1) {\n            return true;\n        }\n        pures.sort(this.constructor.rankComparator);\n        const counts = this.constructor.countRanks(pures);\n        for (const rank of Object.keys(counts)) {\n            if (counts[rank] > 1) {\n                return false;\n            }\n        }\n        const maxRank = pures[pures.length - 1].rank;\n        const minRank = pures[0].rank;\n        //Handle the special case of an A2345 straight\n        //It suffices to assume a non-wild ace is present, since\n        //the normal straight handling will work otherwise.\n        if (maxRank === \"A\") {\n            const secondRank = pures[pures.length - 2].rank;\n            //If the second largest rank is <= 5\n            if (this.constructor.rankComparison[secondRank] <= 3) {\n                return true;\n            }\n        }\n        //The non-wilds must have a range of no more than 4.\n        return (this.constructor.rankComparison[maxRank] - this.constructor.rankComparison[minRank] <= 4)\n    }\n\n    isThreeOfAKind(hand) {\n        const pures = this.constructor.removeWilds(hand);\n        const wildCount = hand.length - pures.length;\n        const counts = this.constructor.countRanks(pures);\n        for (const rank of Object.keys(counts)) {\n            if (counts[rank] + wildCount >= 3) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    isTwoPair(hand) {\n        const pures = this.constructor.removeWilds(hand);\n        const wildCount = hand.length - pures.length;\n        const counts = this.constructor.countRanks(pures);\n        let pairs = 0;\n        for (const rank of Object.keys(counts)) {\n            if (counts[rank] >= 2) {\n                pairs++;\n            }\n        }\n        //If there are k wilds, then there must be 2-k natural pairs.\n        return pairs + wildCount >= 2;\n    }\n\n    isJacksOrBetter(hand) {\n        const pures = this.constructor.removeWilds(hand);\n        const wildCount = hand.length - pures.length;\n        const counts = this.constructor.countRanks(pures);\n        for (const [rank, count] of Object.entries(counts)) {\n            if (this.constructor.rankComparison[rank] >= 9 && count + wildCount >= 2) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    static isWild(card) {\n        return false;\n    }\n\n    static removeWilds(hand) {\n        return hand.filter((card) => !this.isWild(card));\n    }\n\n    static rankComparator = (card1, card2) => this.rankComparison[card1.rank] - this.rankComparison[card2.rank]\n\n    static countRanks(hand) {\n        var counts = {};\n        for (const card of hand) {\n            let rank = card.rank;\n            if (rank in counts) {\n                counts[rank] += 1;\n            } else {\n                counts[rank] = 1;\n            }\n        }\n        return counts;\n    }\n}\n\nexport default Paytable;","import React, { Component } from 'react';\nimport \"../styles/paytables.css\";\n\nclass PaytableView extends Component {\n    constructor(props) {\n        super(props);\n        this.paytable = props.paytable;\n    }\n\n    render() {\n        const hands = this.paytable.hands;\n        return (\n        <table className=\"paytable\">\n            <tr>\n                {[\"Hand\", 1, 2, 3, 4, 5].map((item) => <th key={\"paytableHeader\" + item.toString()}>{item}</th>)}\n            </tr>\n            {hands.map((hand) => <tr key={hand.name + \"row\"} className={hand.name === this.props.hand ? \"winning-hand\" : \"\"}>\n                <td key={hand.name + \"Header\"}>{hand.name}</td>\n                {[1, 2, 3, 4, 5].map((bet) => <td key={hand.name + bet.toString()}>{hand.pays(bet)}</td>)}\n            </tr>)}\n        </table>);\n    }\n}\n\nexport default PaytableView;","class Deck {\n\n    static suits = [\"Spades\", \"Clubs\", \"Diamonds\", \"Hearts\"];\n    static ranks = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"T\", \"J\", \"Q\", \"K\", \"A\"];\n\n    constructor() {\n        this.cardCount = 52;\n        this.cardIdsDrawn = new Set();\n        this.rankCount = {};\n        for (let rank of this.constructor.ranks) {\n            this.rankCount[rank] = 4;\n        }        \n        this.suitCount = {};\n        for (let suit of this.constructor.suits) {\n            this.suitCount[suit] = 13;\n        }\n    }\n\n    drawCard() {\n        var cardId = Math.floor(Math.random() * this.cardCount);\n        while (this.cardIdsDrawn.has(cardId)) {\n            cardId = Math.floor(Math.random() * this.cardCount);\n        }\n        var card = this.constructor.cardFromId(cardId);\n        this.cardIdsDrawn.add(cardId);\n        return card\n    }\n\n    reset() {\n        this.cardIdsDrawn.clear();\n    }\n\n    static cardFromId(cardId) {\n        return {\n            suit: this.suits[Math.floor(cardId / this.ranks.length)],\n            rank: this.ranks[Math.floor(cardId % this.ranks.length)]\n        }\n    }\n}\n\nexport default Deck;","var choose = (() => {\n    var cache = {};\n    function _choose(n, k) {\n        if (n in cache && k in cache[n]) {\n            return cache[n][k];\n        }\n        if (k > n || k < 0) {\n            return 0;\n        }\n        if (k === 0 || k === n) {\n            return 1;\n        }\n        var res = _choose(n-1, k-1) + _choose(n-1, k);\n        if (!(n in cache)) {\n            cache[n] = {};\n        }\n        cache[n][k] = res;\n        return res;\n    }\n    return _choose;\n})();\n\nexport {choose};","import {choose} from \"../utils/math\";\n\nclass HoldCalculator {\n\n    constructor(deck, paytable) {\n        this.deck = deck;\n        this.paytable = paytable;\n        this.outCounters = {\n            \"Jacks or Better\": this.countOutsForJacksOrBetter.bind(this),\n            \"Two Pair\": this.countOutsForTwoPair.bind(this),\n            \"Three of a Kind\": this.countOutsForThreeOfAKind.bind(this),\n            \"Straight\": this.countOutsForStraight.bind(this),\n            \"Flush\": this.countOutsForFlush.bind(this),\n            \"Full House\": this.countOutsForFullHouse.bind(this),\n            \"Four of a Kind\": this.countOutsForFourOfAKind.bind(this),\n            \"Straight Flush\": this.countOutsForStraightFlush.bind(this),\n            \"Royal Flush\": this.countOutsForRoyalFlush.bind(this)\n        };\n    }\n\n    getOptimalHold(cards, bet=5) {\n        var maxReturn = 0;\n        var currentReturn;\n        var bestHold = [false, false, false, false, false];\n        var currentHold = [false, false, false, false, false];\n        for (let i = 0; i < 32; i++) {\n            for (let j = 0; j < 5; j++) {\n                currentHold[j] = Boolean((i >> j) & 1);\n                currentReturn = this.getExpectedReturnForHold(cards, currentHold, bet);\n                if (currentReturn > maxReturn) {\n                    maxReturn = currentReturn;\n                    bestHold = currentHold.slice();\n                }\n            }\n        }\n        return {hold: bestHold, return: maxReturn};\n    }\n\n    getExpectedReturnForHold(cards, hold, bet=5) {\n        var pays = this.getPays(bet);\n        var numCardsHeld = hold.filter(x => x).length;\n        if (numCardsHeld === 5) {\n            return this.paytable.evaluateHand(cards, bet).pays;\n        }\n        var expectedReturn = 0;\n        for (let handName in pays) {\n            var outs = this.outCounters[handName](cards, hold);\n            expectedReturn += outs * pays[handName];\n        }\n        expectedReturn /= choose(this.deck.cardCount - 5, 5 - numCardsHeld);\n        return expectedReturn;\n    }\n\n    getPays(bet) {\n        var hands = this.paytable.hands;\n        var pays = {};\n        for (const hand of hands) {\n            let name = hand.name;\n            let pay = hand.pays(bet);\n            pays[name] = pay;\n        }\n        return pays;\n    }\n    \n    //TODO: Incorporate wild counting\n\n    countOutsForJacksOrBetter(cards, hold) {\n        var heldCards = this.getHeldCards(cards, hold);\n        var deckRanks = this.countRanksInDeck(cards);\n        var draws = this.getDiscardedCards(cards, hold).length;\n        var ranksHeld = this.countRanks(heldCards);\n        var highPair = null;\n        var ranksToDraw = Object.assign({}, deckRanks);\n        for (let rank in ranksHeld) {\n            if (ranksHeld[rank] > 2) {\n                return 0;\n            }\n            if (ranksHeld[rank] === 2) {\n                if (highPair || this.paytable.constructor.rankComparison[rank] < this.paytable.constructor.rankComparison[\"J\"]) {\n                    return 0;\n                }\n                highPair = rank;\n            }\n            delete ranksToDraw[rank];\n        }\n        var outs = 0;\n        for (let i = this.paytable.constructor.rankComparison[\"J\"]; i < this.deck.constructor.ranks.length; i++) {\n            let rank = this.deck.constructor.ranks[i];\n            if (highPair && rank !== highPair) {\n                continue;\n            }\n            let hits = 2 - (ranksHeld[rank] || 0);\n            if (hits >= 0 && draws - hits >= 0) {\n                outs += choose(deckRanks[rank], hits) * this.countDistinctRankDraws(ranksToDraw, draws - hits);\n            }\n        }\n        return outs;\n    }\n\n    countDistinctRankDraws(rankCount, k) {\n        let ranks = Object.keys(rankCount);\n        function _count(i, k) {\n            if (ranks.length - i < k) {\n                return 0;\n            } \n            if (k === 0) {\n                return 1;\n            }\n            const rank = ranks[i];\n            return rankCount[rank] * _count(i+1, k-1) + _count(i+1, k);\n        }\n        return _count(0, k);\n    }\n\n    countOutsForTwoPair(cards, hold) {\n        var heldCards = this.getHeldCards(cards, hold);\n        var deckRanks = this.countRanksInDeck(cards);\n        var draws = this.getDiscardedCards(cards, hold).length;\n        var ranksHeld = this.countRanks(heldCards);\n        var outs = 0;\n        for (let i1 = 0; i1 < this.deck.constructor.ranks.length; i1++) {\n            for (let i2 = i1+1; i2 < this.deck.constructor.ranks.length; i2++) {\n                let rank1 = this.deck.constructor.ranks[i1];\n                let rank2 = this.deck.constructor.ranks[i2];\n                let hits1 = 2 - (ranksHeld[rank1] || 0);\n                let hits2 = 2 - (ranksHeld[rank2] || 0);\n                if (hits1 >= 0 && hits2 >= 0) {\n                    outs += choose(deckRanks[rank1], hits1) * choose(deckRanks[rank2], hits2) * choose(this.deck.cardCount - 5 - deckRanks[rank1] - deckRanks[rank2], draws - hits1 - hits2);\n                }\n            }\n        }\n        return outs;\n    }\n\n    countOutsForThreeOfAKind(cards, hold) {\n        var heldCards = this.getHeldCards(cards, hold);\n        var deckRanks = this.countRanksInDeck(cards);\n        var draws = this.getDiscardedCards(cards, hold).length;\n        var ranksHeld = this.countRanks(heldCards);\n        var outs = 0;\n        for (let rank of this.deck.constructor.ranks) {\n            let hits = 3 - (ranksHeld[rank] || 0);\n            if (hits >= 0) {\n                outs += choose(deckRanks[rank], hits) * choose(this.deck.cardCount - 5 - deckRanks[rank], draws - hits)\n            }\n        }\n        outs -= this.countOutsForFullHouse(cards, hold);\n        return outs;\n    }\n\n    countOutsForStraight(cards, hold) {\n        var heldCards = this.getHeldCards(cards, hold);\n        var heldRanks = new Set();\n        var rank;\n        for (let card of heldCards) {\n            rank = this.paytable.constructor.rankComparison[card.rank];\n            if (heldRanks.has(rank)) {\n                //Cannot draw a straight if we hold a pair or more\n                return 0;\n            }\n            heldRanks.add(rank);\n        }\n        var rankCount = this.countRankIndicesInDeck(cards);\n        var outs = 0;\n        var currentOuts;\n        //Handle 5-high straight as a special case\n        var straightRanks = new Set([12, 0, 1, 2, 3]);\n        for (let highRank = 4; highRank <= 13; highRank += 1) {\n            currentOuts = 1;\n            for (let rank of heldRanks) {\n                if (!(straightRanks.has(rank))) {\n                    currentOuts = 0;\n                    break;\n                }\n            }\n            if (currentOuts !== 0) {\n                for (let rank of straightRanks) {\n                    if (!(heldRanks.has(rank))) {\n                        currentOuts *= rankCount[rank];\n                    }\n                }\n            }\n            outs += currentOuts;\n            straightRanks.delete(highRank - 5);\n            straightRanks.delete(12);\n            straightRanks.add(highRank);\n        }\n        outs -= this.countOutsForStraightFlush(cards, hold) + this.countOutsForRoyalFlush(cards, hold);\n        return outs;\n    }\n\n    countOutsForFlush(cards, hold) {\n        var outs = 0;\n        var heldCards = this.getHeldCards(cards, hold);\n        var discardedCards = this.getDiscardedCards(cards, hold);\n        var suitCount = this.countSuitsInDeck(cards, hold);\n        var suits;\n        if (!this.cardsAreSuited(heldCards)) {\n            return 0;\n        } else if (heldCards.length === 0) {\n            suits = this.deck.constructor.suits;\n        } else {\n            suits = [heldCards[0].suit];\n        }\n        for (let suit of suits) {\n            outs += choose(suitCount[suit], discardedCards.length)\n        }\n        outs -= this.countOutsForStraightFlush(cards, hold) + this.countOutsForRoyalFlush(cards, hold);\n        return outs;\n    }\n\n    countOutsForFullHouse(cards, hold) {\n        var ranksHeld = this.countRanks(this.getHeldCards(cards, hold));\n        var deckRanks = this.countRanksInDeck(cards);\n        var draws = this.getDiscardedCards(cards, hold).length;\n        var outs = 0;\n        for (let over of this.deck.constructor.ranks) {\n            for (let under of this.deck.constructor.ranks) {\n                if (over === under) {\n                    continue;\n                }\n                let toDrawOver = 3 - (ranksHeld[over] || 0);\n                let toDrawUnder = 2 - (ranksHeld[under] || 0);\n                if (toDrawOver + toDrawUnder === draws) {\n                    outs += choose(deckRanks[over], toDrawOver) * choose(deckRanks[under], toDrawUnder);\n                }\n            }\n        }\n        return outs;\n    }\n\n    countOutsForFourOfAKind(cards, hold) {\n        var heldCards = this.getHeldCards(cards, hold);\n        var deckRanks = this.countRanksInDeck(cards);\n        var draws = this.getDiscardedCards(cards, hold).length;\n        var ranksHeld = this.countRanks(heldCards);\n        var outs = 0;\n        for (let rank of this.deck.constructor.ranks) {\n            let hits = 4 - (ranksHeld[rank] || 0);\n            outs += choose(deckRanks[rank], hits) * choose(this.deck.cardCount - 5 - deckRanks[rank], draws - hits)\n        }\n        return outs;\n    }\n\n    countOutsForStraightFlush(cards, hold) {\n        var heldCards = this.getHeldCards(cards, hold);\n        var discardedCards = this.getDiscardedCards(cards, hold);\n        var suits;\n        if (heldCards.length === 0) {\n            suits = this.deck.constructor.suits;\n        } else if (!this.cardsAreSuited(heldCards)) {\n            return 0;\n        } else {\n            suits = [heldCards[0].suit];\n        }\n        var outs = 0;\n        //Handle 5-high straight as a special case\n        var ranks = new Set([12, 0, 1, 2, 3]);\n        var flag;\n        for (let highRank = 4; highRank <= 12; highRank += 1) {\n            for (let suit of suits) {\n                flag = true;\n                for (let card of heldCards) {\n                    if (card.suit !== suit || !ranks.has(this.paytable.constructor.rankComparison[card.rank])) {\n                        flag = false;\n                        break;\n                    }\n                }\n                for (let card of discardedCards) {\n                    if (card.suit === suit && ranks.has(this.paytable.constructor.rankComparison[card.rank])) {\n                        flag = false;\n                        break;\n                    }\n                }\n                if (flag) {\n                    outs += 1;\n                }\n            }\n            ranks.delete(highRank - 5);\n            ranks.delete(12);\n            ranks.add(highRank);\n        }\n        return outs;\n    }\n\n    countOutsForRoyalFlush(cards, hold) {\n        var heldCards = this.getHeldCards(cards, hold);\n        var discardedCards = this.getDiscardedCards(cards, hold);\n        var suits;\n        if (heldCards.length === 0) {\n            suits = this.deck.constructor.suits;\n        } else if (!this.cardsAreSuited(heldCards)) {\n            return 0;\n        } else {\n            suits = [heldCards[0].suit];\n        }\n        var outs = 0;\n        var flag;\n        for (let suit of suits) {\n            flag = true;\n            for (let card of heldCards) {\n                if (card.suit !== suit || this.paytable.constructor.rankComparison[card.rank] < 8) {\n                    flag = false;\n                    break;\n                }\n            }\n            for (let card of discardedCards) {\n                if (card.suit === suit && this.paytable.constructor.rankComparison[card.rank] >= 8) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                outs += 1;\n            }\n        }\n        return outs;\n    }\n\n    countRanksInDeck(cardsDrawn) {\n        var rankCount = Object.assign({}, this.deck.rankCount);\n        for (let card of cardsDrawn) {\n            rankCount[card.rank] -= 1;\n        }\n        return rankCount;\n    }\n\n    countRankIndicesInDeck(cardsDrawn) {\n        var rankCount = this.countRanksInDeck(cardsDrawn);\n        var res = {};\n        for (let rank in rankCount) {\n            res[this.paytable.constructor.rankComparison[rank]] = rankCount[rank];\n        }\n        return res;\n    }\n\n    countSuitsInDeck(cardsDrawn) {\n        var suitCount = Object.assign({}, this.deck.suitCount);\n        for (let card of cardsDrawn) {\n            if (card.suit in suitCount) {\n                suitCount[card.suit] -= 1;\n            }\n        }\n        return suitCount;\n    }\n\n    countRanks(hand) {\n        var counts = {};\n        for (const card of hand) {\n            let rank = card.rank;\n            if (rank in counts) {\n                counts[rank] += 1;\n            } else {\n                counts[rank] = 1;\n            }\n        }\n        return counts;\n    }\n\n    getHeldCards(cards, hold) {\n        return cards.filter((x,i) => hold[i]);\n    }\n\n    getDiscardedCards(cards, hold) {\n        return cards.filter((x,i) => !hold[i]);\n    }\n\n    cardsAreSuited(cards) {\n        if (cards.length === 0) {\n            return true; //TODO: figure out best way to handle this edge case\n        }\n        var suit = cards[0].suit;\n        for (let card of cards) {\n            if (card.suit !== suit) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\nexport default HoldCalculator;","import React, { Component } from 'react';\nimport \"../styles/pokergame.css\";\nimport _ from \"lodash\";\n\nclass HoldAdvisorModal extends Component {\n    constructor(props) {\n        super(props);\n        this.holdCalculator = this.props.holdCalculator;\n    }\n\n    getHoldMessage(hand, hold, message, the_return=0) {\n        return <p className=\"holdMessage\">{message} {hand.map((x, i) => {return this.getHTMLForCard(x, hold[i])})} {\"Expected return: \"}{the_return.toFixed(3)}</p>\n    }\n\n    getHTMLForCard(card, isHeld) {\n        var the_style = {};\n        if (card.suit === \"Hearts\" || card.suit === \"Diamonds\") {\n            the_style['color'] = 'red';\n        } else {\n            the_style['color'] = 'black';\n        }\n        if (isHeld) {\n            the_style['border-style'] = 'solid';\n            the_style['border-color'] = '#dddddd';\n            the_style['border-width'] = '0px 0px 2px 0px';\n        }\n        return <span style={the_style}>{card.rank}{this.suitToCode(card.suit)}</span>\n    }\n\n    suitToCode(suit) {\n        return {\n            \"Hearts\": \"\\u2665\",\n            \"Spades\": \"\\u2660\",\n            \"Diamonds\": \"\\u2666\",\n            \"Clubs\": \"\\u2663\"\n        }[suit] || \"\";\n    }\n\n    render() { \n        if (!this.props.show) {\n            return <div id=\"holdBox\"></div>;\n        }\n        let holdInfo = this.holdCalculator.getOptimalHold(this.props.hand, this.props.bet);\n        let currReturn = this.holdCalculator.getExpectedReturnForHold(this.props.hand, this.props.hold, this.props.bet);\n        let optimalHold = holdInfo[\"hold\"];\n        let optimalReturn = holdInfo[\"return\"];\n        if (!_.isEqual(optimalHold, this.props.hold)) {\n            return <div id=\"holdBox\" className=\"holdAdvisor\">\n                <p>Try this next time...</p>\n                {this.getHoldMessage(this.props.hand, this.props.hold, \"Your hold:\", currReturn)}\n                {this.getHoldMessage(this.props.hand, optimalHold, \"Optimal hold:\", optimalReturn)}\n            </div>\n        }\n        return <div id=\"holdBox\"></div>;\n    }\n}\n \nexport default HoldAdvisorModal;","import React, { Component } from 'react';\nimport Paytable from '../model/Paytable';\nimport PaytableView from './PaytableView';\nimport Deck from \"../model/Deck\";\nimport HoldCalculator from \"../model/HoldCalculator\";\nimport HoldAdvisorModal from './HoldAdvisorModal';\nimport \"../styles/pokergame.css\";\n\nconst cardImages = require.context(\"../../public/cards/\", true);\n\nclass PokerGame extends Component {\n\n    static paytable = new Paytable();\n\n    constructor(props) {\n        super(props);\n        this.deck = new Deck();\n        this.holdCalculator = new HoldCalculator(this.deck, this.constructor.paytable);\n        this.state = {  \n            gameState: \"DEAL\",\n            hand: \"Nothing\",\n            cards: [],\n            prevCards: [],\n            held: [false, false, false, false, false],\n            bet: 1,\n            pays: 0,\n            chips: 100\n        }\n        this.preloadCardImages();\n        this.handleDeal = this.handleDeal.bind(this);\n        this.handleDraw = this.handleDraw.bind(this);\n        this.handleBetMax = this.handleBetMax.bind(this);\n        this.handleBetOne = this.handleBetOne.bind(this);\n        this.updateHand = this.updateHand.bind(this);\n        this.getCardImageCode = this.getCardImageCode.bind(this);\n    }\n\n    preloadCardImages() {\n        for (let i = 0; i < this.deck.cardCount; i++) {\n            let card = this.deck.constructor.cardFromId(i);\n            let url = \"../../public/cards/\" + this.getCardImageCode(card) + \".png\";\n            var img = new Image();\n            img.src = url;\n        }\n    }\n\n    handleDeal() {\n        this.deck.reset();\n        var new_cards = [];\n        for (let i = 0; i < 5; i++) {\n            let card = this.deck.drawCard();\n            new_cards.push(card);\n        }\n        this.updateHand(new_cards, () => {        \n            this.setState((state) => ({\n            gameState: \"DRAW\",\n            held: [false, false, false, false, false],\n            chips: state.chips - state.bet }))\n        });\n    }\n\n    handleDraw() {\n        var new_cards = this.state.cards;\n        var old_cards = this.state.cards.slice();\n        for (let i = 0; i < this.state.held.length; i++) {\n            if (!this.state.held[i]) {\n                var new_card = this.deck.drawCard();\n                new_cards[i] = new_card;\n            }\n        }\n        this.updateHand(new_cards, () => {        \n            this.setState((state) => ({\n                prevCards: old_cards,\n                gameState: \"DEAL\",\n                chips: state.chips + state.pays \n            }))\n        });\n    }\n\n    handleBetOne() {\n        if (this.state.gameState === \"DEAL\") {\n            this.setState((state) => ({\n                bet: state.bet % 5 + 1\n            }))\n        }\n    }\n\n    handleBetMax() {\n        if (this.state.gameState === \"DEAL\") {\n            this.setState({\n                bet: 5\n            }, () => this.handleDeal());\n        }\n    }\n\n    updateHand(newCards, callback = () => {}) {\n        let newHand = this.constructor.paytable.evaluateHand(newCards, this.state.bet);\n        this.setState({\n            cards: newCards,\n            hand: newHand.name,\n            pays: newHand.pays\n        }, callback);\n    }\n\n    handleHoldChange = (i) => {\n        if (this.state.gameState === \"DRAW\") {\n            this.setState((state) => ({\n                held: state.held.map((isHeld, index) => i === index ? !isHeld : isHeld)\n            }))\n        }\n    }\n\n    getCardImageCode(card) {\n        return card.rank.toString() + card.suit[0];\n    }\n\n    getCardImage(i) {\n        if (this.state.cards.length === 0) {\n            return <img className=\"card\" draggable=\"false\" key={\"card\" + i.toString()} src={cardImages(\"./red_back.png\")}></img>\n        }\n        var card = this.state.cards[i];\n        return <img onClick={() => this.handleHoldChange(i)} className=\"card\" draggable=\"false\" key={\"card\" + i.toString()} src={\"../../public/cards/\" + this.getCardImageCode(card) + \".png\"}></img>\n    }\n\n    render() {\n        return <div className=\"pokerGame\">\n            <PaytableView className=\"paytable gameItem\" hand={this.state.hand} paytable={this.constructor.paytable}></PaytableView>\n            <div className=\"cards\">\n                {[0,1,2,3,4].map((i) =><div className=\"cardAndHold gameItem\">\n                    {this.getCardImage(i)}\n                    <button className={this.state.held[i] ? \"heldButton\" : \"holdButton\"} key={\"button\" + i.toString()} onClick={() => this.handleHoldChange(i)}>{this.state.held[i] ? \"HELD\" : \"HOLD\"}</button>\n                </div>)}\n            </div>\n            <div className=\"handNotifier\">\n                {this.state.pays > 0 ? this.state.hand + \": Pays \" + this.state.pays : null}\n            </div>\n            <div className=\"betButtons gameItem\">\n                <HoldAdvisorModal show={this.state.gameState === \"DEAL\" && this.state.cards.length > 0} bet={this.state.bet} hand={this.state.prevCards} hold={this.state.held} holdCalculator={this.holdCalculator}></HoldAdvisorModal>\n                <p className=\"chipCounter\">Chips: {this.state.chips} Bet: {this.state.bet}</p>\n                <button className=\"betButton\" onClick={this.handleBetOne}>BET ONE</button>\n                <button className=\"betButton\" onClick={this.handleBetMax}>BET MAX</button>\n                <button className={this.state.gameState === \"DEAL\" ? \"betButton\" : \"drawButton\"} onClick={() => (this.state.gameState === \"DEAL\" ? this.handleDeal() : this.handleDraw())}>{this.state.gameState}</button>\n            </div>\n        </div>;\n    }\n}\n \nexport default PokerGame;","import React from 'react';\nimport './App.css';\nimport PokerGame from './components/PokerGame';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PokerGame></PokerGame>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}